<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SagTikIslem.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>121, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MenuOrtakIslem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABNZJREFUaEPt
        mdtvG0UUh/PE5e9AiCfETYCKBIrXqaAgKlVQQCqCR55QKVeReIObqrSlwS0vQCvSUCKIiJoGe3edRKYx
        pKRx2pK4TUgTuS0qEBB23CL1BUiV5RznuNqZOd5d2/GGh/ykT7Yz57bOzOzZcdO61vU/0KvJTbe2m+FQ
        xAh3RAxtAJgFrgL/Av/ge93UfoLXAd0M7YwYLc3oQ+5rJyjmASjqMPAXYFfJtbZE+FCrod1P4YITJoUC
        hqWCaicRGmy1mu+l8I3Tjr4Nt+tG+CNIekMpon6W9IR2IJpuvo3Sra4i8dBdkOS8lLQRZCPGxjsp7epI
        T4QfhMB5KVEjKbaZ2iOUvj7pVuhhCHhdShAE19sM7SEqozbRtFmUAgdJoebphIsJ9vUpJmjQnMfNg8ry
        L9ptuIDBY2oxKsufaJ9nt8qvJ6P2xWLGFc6vTm5UdZ8AB9eblNdFcD6rgEXluYvaAy6AgNtFcPaV0M0w
        +3eGZT3ech+VWVlgiL0NF0Dg45Ov2LnFU3VdwPvDW+zTVwbsg+mX2XEZ2FY/oTJ5YYcIhp6N2c7kJnv6
        jxRbPML5yHyQ2mpnFwZL9hhr19DTrJ3E1Wjf1luoXFWRhKYxTgqJmZhQcK44LnzmfJxErSeULyA+/SFr
        K9NmaY9Ruaqon2cdy3QMPmXPF8aE5H1THcKa4PxkjmV3CzHmCift3UObWVuJKJWrCgbjkrHC0Ym3hcRT
        C0m73dpYGitfhOzDgT7Z34eEWF+cfoe1daIb2nEqVxUY4JMU61gmfbFbSIrfvnMcv1nnZzfknexErou1
        k5ihclXBYFEyVjjza1xIGht5kbXzQ2xkmxDr7G8GaydRoHJVwSA+v3JON5n9My0kxTXB2fmhI/mkEGs2
        /x1rJ/E3lasKBj0vABebM2nUepy18wPuRs5Yc4VR1k7C9QI8p9DUgiUk3Z96jrXzQ+e3zwuxJiE2ZyeR
        p3JVwaDnIh69/KWQtOfMu6ydH3rOtgqxRi/1sHYSlRcx9CXfMA4CvT+2C0kzV47B1ua7n7kJ+kz80i/E
        +gpic7YCCa2fylW1cujEODnYl3pWufN2Z95gbd34PPOmECO3OG7vTT3D2kq8R+WqWjldY50EUvOHheS4
        +A5UsZ0eHHmp5OOMMTx3iLWVgVnyKJWripq5a7KTzF74L8wv/iAUcCH/vf3Zqe2svZOu8e32XF4sHnc2
        n99+0bWZQ4GRr3Yap42ziDJjl3tLRe5y3B/wfdf4a/bYz72sT3dmhxC7Ep7tNIoeJ9kAMnJDJoPTRJ4q
        MlW0Hsu+HyvxrJIJwHIk87oynfyAHe3RibfYmBUwqDxv6VbL3eCwJAWoSOeJF5Qmz42R3JHSTYyLVYEl
        3QjdQ+X5Ex60MoFciaW32f3n9sD+fry0qMsF43v8G47V0vzpprafyvKvlYMtbVIOVg3Y6yDcWBWcq+lg
        C4XHehCgIAUMknwkqd1B5dQmPGCFQGtyuIun4lRGfVqL43XolTZQ+tURTaeslKgRTNY9bSqptLBNLQZJ
        fG+xVYAxOxv2E5NTuCdDMgtYpuT1gDEMvPdQ+OCEZ5URM/QpFIC/CXPFuVHE3iaQXye9hB0inphBUVE8
        t4HXGQB/2cFnbATfT+PDCLxGsSX27CrXta4g1NT0H6DcjCpv9YoAAAAAAElFTkSuQmCC
</value>
  </data>
</root>